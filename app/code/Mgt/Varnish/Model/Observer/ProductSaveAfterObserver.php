<?php
 namespace Mgt\Varnish\Model\Observer; use Magento\Framework\Event\ObserverInterface; class ProductSaveAfterObserver implements ObserverInterface { protected $config; protected $productUrlRewriteGenerator; protected $catalogProductTypeConfigurable; protected $productFactory; protected $varnishConfig; protected $urlQueue; protected static $isQueued = false; public function __construct(\Magento\PageCache\Model\Config $config, \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator $productUrlRewriteGenerator, \Magento\ConfigurableProduct\Model\ResourceModel\Product\Type\Configurable $catalogProductTypeConfigurable, \Magento\Catalog\Model\ProductFactory $productFactory, \Mgt\Varnish\Model\UrlQueue $urlQueue, \Mgt\Varnish\Model\Cache\Config $varnishConfig) { goto Acaef; edcbf: $this->productUrlRewriteGenerator = $productUrlRewriteGenerator; goto b2aa6; Acaef: $this->config = $config; goto edcbf; bcb8c: $this->urlQueue = $urlQueue; goto adf99; adf99: $this->varnishConfig = $varnishConfig; goto Aa506; Fc7cb: $this->productFactory = $productFactory; goto bcb8c; b2aa6: $this->catalogProductTypeConfigurable = $catalogProductTypeConfigurable; goto Fc7cb; Aa506: } public function execute(\Magento\Framework\Event\Observer $observer) { goto df3a3; F5e22: $productId = $product->getId(); goto Fe42d; b7233: if (!count($urls)) { goto B8f5d; } goto B5d10; df3a3: $product = $observer->getEvent()->getProduct(); goto B96d5; B7052: b30e8: goto f55f6; d0c89: de1c3: goto F6ffe; D625f: if (!count($parentProductIds)) { goto B6f7e; } goto Bbde3; B2ba7: if (!(true === $isCacheWarmerEnabled && isset($product) && $product instanceof \Magento\Catalog\Model\Product)) { goto Cded3; } goto cd942; E5a7e: if (false === empty($productUrls)) { goto b30e8; } goto F5e22; B96d5: $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); goto B2ba7; F6ffe: b4029: goto b7233; Caa19: B6f7e: goto e5220; Bbde3: foreach ($parentProductIds as $parentProductId) { goto B4bde; E089b: b63bd: goto F678d; a4f44: foreach ($productUrls as $url) { $urls[] = ["\x73\x74\x6f\162\145\137\151\x64" => $url->getStoreId(), "\160\x61\x74\x68" => $url->getRequestPath(), "\x70\162\151\157\x72\x69\x74\171" => \Mgt\Varnish\Model\UrlQueue::PRIORITY_HIGH]; f0bf4: } goto cfcd8; B4bde: $product = $this->productFactory->create(); goto c2c22; cfcd8: d2964: goto E089b; e14cb: $productUrls = $this->productUrlRewriteGenerator->generate($product); goto a4f44; c2c22: $product->load($parentProductId); goto e14cb; F678d: } goto C377c; C377c: C6d60: goto Caa19; B5d10: try { $this->urlQueue->addToQueue($urls); } catch (\Exception $e) { } goto E0c3f; E0c3f: B8f5d: goto C03e9; C03e9: Cded3: goto a3b07; cd942: $productUrls = $this->productUrlRewriteGenerator->generate($product); goto B7ee7; B7ee7: $urls = []; goto E5a7e; f55f6: foreach ($productUrls as $url) { $urls[] = ["\163\x74\157\x72\x65\137\x69\x64" => $url->getStoreId(), "\160\141\164\150" => $url->getRequestPath(), "\x70\162\x69\x6f\x72\x69\164\x79" => \Mgt\Varnish\Model\UrlQueue::PRIORITY_HIGH]; D2a6b: } goto d0c89; e5220: goto b4029; goto B7052; Fe42d: $parentProductIds = $this->catalogProductTypeConfigurable->getParentIdsByChild($productId); goto D625f; a3b07: } }
